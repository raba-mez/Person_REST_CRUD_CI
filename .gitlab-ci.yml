stages:
  - packageging
  - integrationtest
  - build_docker_image
  - run_container
  
default:
  image: maven:3.5.3-jdk-8 
 
variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"

# Validate the project is correct and all necessary information is available, compile the source code of the project, 
#test via unit tests and package Jar file

run unit tests and package:
  inherit:
    default: true
    variables: true 
  stage: packageging
  script:
    - mvn clean package -P dev
  artifacts:
    paths:
      - target/*.jar
      - target/surefire-reports
  cache:
    paths:
      - .m2/repository

#Run integration test

integration test:
  inherit:
    default: true
    variables: true
  stage: integrationtest
  services:
    - name: mysql:5.6
      alias: person-mysql-db
  variables:
    MYSQL_DATABASE: $MYSQL_TEST_DB
    MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PWD
    MYSQL_USER: $MYSQL_USER
    MYSQL_PASSWORD: $MYSQL_USER_PWD
  script:
    - mvn clean verify -P integration-test
  artifacts:
    paths:
      - target/failsafe-reports

# Build docker image form Dockerfile

build docker image:
  image: docker:latest
  stage: build_docker_image
  inherit:
    default: false
    variables: false
  services:
    - docker:dind
  script:
    - docker build -t ccyprus/personcrud .
    - docker save ccyprus/personcrud > personcrud.tar
    - docker login -u ccyprus -p $DOCKER_HUB_PASSWORD
    - docker push ccyprus/personcrud
  artifacts:
    paths:
      - personcrud.tar
        
# Run container
run personcrud image:
  image: docker:latest
  stage: run_container
  inherit:
    default: false
    variables: false
  before_script:
    - apk add --update curl && rm -rf /var/cache/apk/*
  services:
    - docker:dind
  script:
    - docker load < personcrud.tar
    - docker network create person-network
    - docker run --name person-mysql-db --network="person-network" -e MYSQL_DATABASE=$MYSQL_DB -e MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PWD -e MYSQL_USER=$MYSQL_USER -e MYSQL_PASSWORD=$MYSQL_USER_PWD -d mysql:5.6
    - docker run --name personcrud-container -p 8086:8086 -d --network="person-network" ccyprus/personcrud 
    - sleep 30
    - docker logs personcrud-container
    - 'curl -v -H "Content-Type:application/json" -d @./requests/post_new_user.json "http://docker:8086/users" | grep -q "status: 200"'
#    - 'curl -v -H "Content-Type:application/json" -d @./requests/post_request.json http://docker:8086/persons'
#    - curl -v "http://docker:8086/persons"
#    - 'curl -v -H "Content-Type:application/json" -d @./requests/put_request.json -X PUT http://docker:8086/persons/1'
#    - curl -v "http://docker:8086/persons/1"
#    - 'curl -v -H "Content-Type:application/json" -X DELETE http://docker:8086/persons/1'
#    - curl -v "http://docker:8086/persons" 
    - docker logs personcrud-container